let players,searchResults,playersData="assets/data/data.json";const pageContainer=document.querySelector("main"),playersContainer=document.querySelector(".players"),displayContainer=document.querySelector(".display"),searchBar=document.querySelector("#search"),searchToggle=document.querySelector("a.search"),displayText=displayContainer.querySelector("h1"),displayBG=displayContainer.querySelector(".image"),displayImage=displayContainer.querySelector("img"),displayControl=displayContainer.querySelectorAll("a.control"),displayKits=displayContainer.querySelector(".kits"),displayCount=displayContainer.querySelector(".count"),isVowel=function(t){return letter=t.charAt(0),"a"==letter||"e"==letter||"i"==letter||"o"==letter||"u"==letter?playerArticle="an":playerArticle="a",playerArticle+" "+t},listItems=function(t){let e="",s=0,a=t.length-2;return t.forEach((function(t){s==a?e=e+t+" and ":s>a?e+=t:e=e+t+", ",s+=1})),e},hasSponsor=function(t){return 0==t?"":` sponsored by ${t}`},isCaptain=function(t){return 0==t[0].captain?"playing for":"captaining"},displayMultipleKits=function(t){if(displayKits.innerHTML="",t.kit.length>1){let e=0;t.kit.forEach((function(s){const a=document.createElement("a");let i=null;if(0==e)i=playersContainer.querySelector(`[data-id="${t.id}"] img`).getAttribute("data-title1"),a.classList.add("current"),a.setAttribute("data-img",`url(assets/img/players/0${t.id}.svg)`);else{let s=`url(assets/img/players/0${t.id}.svg)`.replace(".svg",`-${e+1}.svg`);i=playersContainer.querySelector(`[data-id="${t.id}"] img`).getAttribute(`data-title${e+1}`),a.setAttribute("data-img",s)}a.classList.add("kit-switch"),a.setAttribute("data-kit",`filter_${e+=1}`),a.setAttribute("data-title",i),displayKits.appendChild(a)}))}},navigationEnd=function(t,e){displayControl[1].classList.remove("disabled"),displayControl[2].classList.remove("disabled"),0==t&&displayControl[2].classList.add("disabled"),t>=e-1&&displayControl[1].classList.add("disabled")},fillDisplay=function(t){let e=playersContainer.querySelector(`[data-id="${t}"]`),s=e.getAttribute("data-id"),a=e.getAttribute("title"),i=e.querySelector("img").getAttribute("data-title1"),l=s,r=players.length,n=s-1;e.classList.contains("searched")&&(r=searchResults.length,searchResults.forEach((function(t,s){t.dataset.id==e.dataset.id&&(l=s+1,n=l-1)}))),displayText.style.opacity=0,displayImage.style.opacity=0,setTimeout(()=>{displayText.innerHTML=a,displayImage.style.backgroundImage=`url(assets/img/players/0${s}.svg)`,displayImage.setAttribute("title",i),displayImage.setAttribute("data-id",s),displayText.style.opacity=1,displayImage.style.opacity=1},300),displayBG.classList.remove(displayBG.classList[1]),displayBG.classList.add(e.classList[1]),displayCount.innerHTML=`${l}/${r}`,displayKits.innerHTML="",zoomOut(),navigationEnd(n,r),displayMultipleKits(players[s-1])},toggleDisplay=function(){displayContainer.classList.contains("active")?(displayContainer.classList.remove("active"),displayKits.classList.remove("active"),displayControl[0].classList.remove("active"),displayControl[1].classList.remove("active"),displayControl[2].classList.remove("active"),displayCount.classList.remove("active"),displayImage.classList="",displayText.classList="",displayText.style.opacity=0,displayImage.style.opacity=0,searchBar.classList.contains("searching")&&searchBar.focus(),zoomOut()):(displayContainer.classList.add("active"),displayKits.classList.add("active"),displayControl[0].classList.add("active"),displayControl[1].classList.add("active"),displayControl[2].classList.add("active"),displayImage.classList.add("active"),displayText.classList.add("active"),displayCount.classList.add("active"))},toggleSearch=function(){playersContainer.classList.toggle("searching"),searchBar.classList.toggle("searching"),searchToggle.classList.toggle("searching"),searchBar.value="",searchPlayers(searchBar.value),searchBar.classList.contains("searching")?searchBar.focus():searchBar.blur()},searchPlayers=function(t){searchResults=[];let e=t.toLowerCase(),s=playersContainer.querySelectorAll(".player");window.scrollTo(0,0),s.forEach((function(t){let s=t.getAttribute("data-tags").toLowerCase(),a="^(?=.*\\b"+e.trim().split(/\s+/).join("\\b)(?=.*\\b")+").*$",i=RegExp(a,"i");s.match(i)?(t.style.display="block",t.classList.add("searched"),searchResults.push(t)):(t.style.display="none",t.classList.remove("searched"))}))},findPlayer=function(t,e){let s=playersContainer.querySelectorAll(".player");if(1==t)for(let t=e+1;t<s.length;t++)if(s[t].classList.contains("searched"))return s[t].dataset.id;if(2==t)for(let t=e-1;t>=0;t--)if(s[t].classList.contains("searched"))return s[t].dataset.id},zoomOut=function(){displayImage.style.backgroundSize="150%",displayImage.style.backgroundPosition="50% 50%",displayBG.classList.remove("zoomed")};fetch(playersData).then(t=>t.json()).then(t=>{setTimeout(()=>pageContainer.classList.remove("loading"),2e3),players=t.players,players.forEach(t=>{let e,s=t,a=s.kit,i=s.competition,l=s.id;s.position.charAt(0);const r=document.createElement("div"),n=document.createElement("img");if(a.length>1){let t=0;r.setAttribute("data-multipleKits","yes"),a.forEach(a=>{t+=1,pColours=null,pColours=listItems(a.colours),n.setAttribute(`data-title${t}`,`${s.name} wearing ${isVowel(pColours)} ${a.brand} kit${hasSponsor(a.sponsor)}.`),str=a.colours.toString().replace(/,/g," "),e+=" "+str}),n.setAttribute("title",`${s.name} wearing ${isVowel(pColours)} ${listItems(a[0].colours)} ${a[0].brand} kit${hasSponsor(a[0].sponsor)}.`)}else r.setAttribute("data-multipleKits","no"),pColours=listItems(a[0].colours),n.setAttribute("data-title1",`${s.name} wearing ${isVowel(pColours)} ${a[0].brand} kit${hasSponsor(a[0].sponsor)}.`),n.setAttribute("title",`${s.name} wearing ${isVowel(pColours)} ${a[0].brand} kit${hasSponsor(a[0].sponsor)}.`),e=pColours.replace(" and",""),e=e.replace(",","");r.classList.add("player",`card-bg-${s.class}`,`tc-${s.class}`),0==a[0].sponsor&&(a[0].sponsor=""),r.setAttribute("data-id",s.id),r.setAttribute("data-name",s.name),r.setAttribute("data-collection",s.collection),r.setAttribute("data-tags",`${s.name} ${s.number} ${s.team} ${s.position} ${i.year} ${i.location} ${i.title} ${s.nationality} ${s.tags} ${s.collection} ${e} ${a[0].sponsor} ${a[0].brand}`),r.setAttribute("title",`${s.name} ${isCaptain(s.kit)} ${s.team} as ${isVowel(s.position)} in the ${i.year} ${i.location} ${i.title}.`),n.setAttribute("src","assets/img/blank.png"),n.setAttribute("alt",s.name),n.style.backgroundImage=`url(assets/img/players/0${l}.svg)`,r.appendChild(n),playersContainer.appendChild(r)})}).catch(t=>{pageContainer.classList.add("error")}),document.addEventListener("click",(function(t){if(t.target&&t.target.classList.contains("player")&&(toggleDisplay(),fillDisplay(t.target.dataset.id)),t.target&&t.target.classList.contains("kit-switch")){displayImage.style.backgroundImage;if(!t.target.classList.contains("current")){displayKits.querySelectorAll(".current").forEach(t=>{t.classList.remove("current")}),t.target.classList.add("current"),displayImage.style.backgroundImage=t.target.getAttribute("data-img"),displayImage.setAttribute("title",t.target.getAttribute("data-title"))}}})),displayControl.forEach(t=>{t.addEventListener("click",()=>{let e=parseInt(displayImage.getAttribute("data-id"));if(t.classList.contains("close")&&toggleDisplay(),t.classList.contains("next")){let s=e+1;playersContainer.classList.contains("searching")&&(s=findPlayer(1,s)),t.classList.contains("disabled")||fillDisplay(s)}if(t.classList.contains("previous")){let s=e-1;playersContainer.classList.contains("searching")&&(s=findPlayer(2,s)),t.classList.contains("disabled")||fillDisplay(s)}})}),document.addEventListener("keyup",t=>{if(displayContainer.classList.contains("active")){let e=Math.floor(Math.random()*players.length),s=parseInt(displayImage.getAttribute("data-id"));if("Escape"==t.key&&toggleDisplay(),"r"==t.key&&(playersContainer.classList.contains("searching")||fillDisplay(0==e?1:e)),"ArrowRight"==t.key){let t=s+1;playersContainer.classList.contains("searching")&&(t=findPlayer(1,t)),displayControl[1].classList.contains("disabled")||fillDisplay(t)}if("ArrowLeft"==t.key){let t=s-1;playersContainer.classList.contains("searching")&&(t=findPlayer(2,t)),displayControl[2].classList.contains("disabled")||fillDisplay(t)}}else searchBar.classList.contains("searching")?"Escape"==t.key&&toggleSearch():"s"==t.key&&toggleSearch()}),displayBG.addEventListener("click",()=>{displayBG.classList.contains("zoomed")?zoomOut():(displayImage.style.backgroundSize="600%",displayBG.classList.add("zoomed"))}),displayBG.addEventListener("mousemove",t=>{if(displayBG.classList.contains("zoomed")){let e=-t.offsetX-1150,s=-t.offsetY-1e3;displayImage.style.backgroundPosition=`${e}px ${s}px`}}),searchToggle.addEventListener("click",()=>{toggleSearch()}),searchBar.addEventListener("keyup",()=>{searchPlayers(searchBar.value)});
//# sourceMappingURL=data:application/json;charset=utf8;base64,
